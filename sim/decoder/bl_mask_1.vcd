$date
	Fri Oct 30 22:45:44 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module bl_mask_tb_1 $end
$var wire 32 ! bl_mask [31:0] $end
$var reg 2 " addr [1:0] $end
$var reg 2 # conf [1:0] $end
$scope module bl_mask_1 $end
$var wire 2 $ addr [1:0] $end
$var wire 1 % addr0_b $end
$var wire 1 & addr1_b $end
$var wire 1 ' c16_b $end
$var wire 1 ( c16_h1_en $end
$var wire 1 ) c16_h2_en $end
$var wire 1 * c32 $end
$var wire 1 + c8_b $end
$var wire 1 , c8_q1_en $end
$var wire 1 - c8_q2_en $end
$var wire 1 . c8_q3_en $end
$var wire 1 / c8_q4_en $end
$var wire 2 0 conf [1:0] $end
$var wire 1 1 conf0_b $end
$var wire 1 2 conf1_b $end
$var wire 1 3 h1_en $end
$var wire 1 4 h1_en_b $end
$var wire 1 5 h2_en $end
$var wire 1 6 h2_en_b $end
$var wire 1 7 q1_en_b $end
$var wire 1 8 q2_en_b $end
$var wire 1 9 q3_en_b $end
$var wire 1 : q4_en_b $end
$var wire 32 ; bl_mask [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx ;
x:
x9
x8
x7
x6
x5
x4
x3
x2
x1
bx 0
x/
x.
x-
x,
x+
x*
x)
x(
x'
x&
x%
bx $
bx #
bx "
bx !
$end
#5
07
08
09
b0 !
b0 ;
0:
13
15
04
06
0)
0/
1%
1&
0(
0,
0-
0.
11
12
1*
1'
1+
b0 "
b0 $
b0 #
b0 0
#15
19
b11111111111111110000000000000000 !
b11111111111111110000000000000000 ;
1:
05
16
1(
01
0*
0'
b1 #
b1 0
#25
09
0:
15
17
b1111111111111111 !
b1111111111111111 ;
18
06
03
1)
14
0%
0(
b1 "
b1 $
#35
19
1:
b11111111111111111111111100000000 !
b11111111111111111111111100000000 ;
07
05
1,
16
0+
0)
1%
11
02
1'
b0 "
b0 $
b10 #
b10 0
#45
08
1-
b11111111111111110000000011111111 !
b11111111111111110000000011111111 ;
17
0%
0,
b1 "
b1 $
#55
09
1.
b11111111000000001111111111111111 !
b11111111000000001111111111111111 ;
18
1%
0&
0-
b10 "
b10 $
#65
0:
1/
b111111111111111111111111 !
b111111111111111111111111 ;
19
0%
0.
b11 "
b11 $
#75
